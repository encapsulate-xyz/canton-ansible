---
- name: Include the specific network's vars file
  ansible.builtin.include_vars:
    file: vars/ufw_rules.yml

- name: Apply UFW rules for each node type
  ansible.builtin.include_tasks: tasks/apply_ufw_rules.yml
  loop: "{{ app_ufw_rules }}"

- name: Include setup deps task
  ansible.builtin.include_tasks: tasks/setup_deps.yml

- name: Include user creation task
  ansible.builtin.include_tasks: tasks/create_user_and_directories.yml
  vars:
    home: "{{ app_home_dir }}"
    directories: "{{ app_directories }}"
    log_file_path: "{{ app_log_file_path }}"

- name: Include extract binaries task
  ansible.builtin.include_tasks: extract_binaries.yml

- name: Copy configuration files
  ansible.builtin.copy:
    src: "{{ env }}/{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ service_identifier }}"
    group: "{{ service_identifier }}"
    mode: "0644"
  loop:
    - { src: "bootstrap.sc", dest: "{{ app_bootstrap_config_file_path }}" }
    - { src: "bootstrap_entrypoint.sc", dest: "{{ app_bootstrap_entrypoint_file_path }}" }
  notify:
    - Restart service

- name: Copy configuration template files
  ansible.builtin.template:
    src: "{{ env }}/{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ service_identifier }}"
    group: "{{ service_identifier }}"
    mode: "0644"
  loop:
    - { src: "app.conf.j2", dest: "{{ app_app_config_file_path }}" }
    - { src: "monitor.conf.j2", dest: "{{ app_monitor_config_file_path }}" }
    - { src: "additional_config.conf.j2", dest: "{{ app_additional_config_file_path }}" }
    - { src: "general.env.j2", dest: "{{ app_environment_general_file_path }}" }
  notify:
    - Restart service

- name: Ensure databases are created
  community.postgresql.postgresql_db:
    name: validator
    state: present
    login_user: postgres
    login_password: "{{ vault.default.psql_db_password }}"
  become: true
  become_user: postgres

- name: Copy systemd service file
  ansible.builtin.template:
    src: "{{ env }}/systemd.service.j2"
    dest: /etc/systemd/system/{{ service_identifier }}.service
    owner: root
    group: root
    mode: "0644"
  notify:
    - Reload service
    - Restart service
